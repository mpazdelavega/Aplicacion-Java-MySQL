package vista;

import controlador.Registro;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Paciente;


public class Menu extends javax.swing.JFrame {

    Registro re;
    
    public Menu() {
        initComponents();
        this.jInternalFrameAgregarPaciente.setVisible(false);
        this.jInternalFrameModificarPaciente.setVisible(false);
        this.jInternalFrameListarPacientes.setVisible(false);
        this.jInternalFrameNombreIntegrante.setVisible(false);
        re = new Registro();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGenero = new javax.swing.ButtonGroup();
        buttonGroupIsapre = new javax.swing.ButtonGroup();
        buttonGroupSexoModificar = new javax.swing.ButtonGroup();
        buttonGroupIsapreModificar = new javax.swing.ButtonGroup();
        jInternalFrameAgregarPaciente = new javax.swing.JInternalFrame();
        jLabelRutPaciente = new javax.swing.JLabel();
        jLabelNombrePaciente = new javax.swing.JLabel();
        jLabelGeneroPaciente = new javax.swing.JLabel();
        jLabelDireccionPaciente = new javax.swing.JLabel();
        jLabelEdadPaciente = new javax.swing.JLabel();
        jLabelCiudadPaciente = new javax.swing.JLabel();
        jLabelIsaprePaciente = new javax.swing.JLabel();
        jLabelDonantePaciente = new javax.swing.JLabel();
        jTextFieldRutPaciente = new javax.swing.JTextField();
        jTextFieldNombrePaciente = new javax.swing.JTextField();
        jTextFieldEdadPaciente = new javax.swing.JTextField();
        jTextFieldDireccionPaciente = new javax.swing.JTextField();
        jCheckBoxDonante = new javax.swing.JCheckBox();
        jComboBoxCiudadPaciente = new javax.swing.JComboBox<>();
        jRadioButtonSi = new javax.swing.JRadioButton();
        jRadioButtonNo = new javax.swing.JRadioButton();
        jRadioButtonFemenino = new javax.swing.JRadioButton();
        jRadioButtonMasculino = new javax.swing.JRadioButton();
        jButtonGuardarPaciente = new javax.swing.JButton();
        jButtonLimpiarPaciente = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jInternalFrameListarPacientes = new javax.swing.JInternalFrame();
        jLabelBuscarRutPaciente = new javax.swing.JLabel();
        jTextFieldFiltroRut = new javax.swing.JTextField();
        jButtonBuscarFiltro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListarPacientes = new javax.swing.JTable();
        jButtonEliminar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jInternalFrameModificarPaciente = new javax.swing.JInternalFrame();
        jLabelRutModificar = new javax.swing.JLabel();
        jLabelNombreModificar = new javax.swing.JLabel();
        jLabelGeneroModificar = new javax.swing.JLabel();
        jLabelEdadModificar = new javax.swing.JLabel();
        jLabelDireccionModificar = new javax.swing.JLabel();
        jLabelCiudadModificar = new javax.swing.JLabel();
        jLabelIsapreModificar = new javax.swing.JLabel();
        jLabelDonanteModificar = new javax.swing.JLabel();
        jTextFieldRutModificar = new javax.swing.JTextField();
        jTextFieldNombreModificar = new javax.swing.JTextField();
        jTextFieldEdadModificar = new javax.swing.JTextField();
        jTextFieldDireccionModificar = new javax.swing.JTextField();
        jRadioButtonFemeninoModificar = new javax.swing.JRadioButton();
        jRadioButtonMasculinoModificar = new javax.swing.JRadioButton();
        jRadioButtonSiModificar = new javax.swing.JRadioButton();
        jRadioButtonNoModificar = new javax.swing.JRadioButton();
        jComboBoxCiudadModificar = new javax.swing.JComboBox<>();
        jButtonGuardarModificar = new javax.swing.JButton();
        jButtonLimbiarModificar = new javax.swing.JButton();
        jButtonSalirModificar = new javax.swing.JButton();
        jCheckBoxDonanteModificar = new javax.swing.JCheckBox();
        jInternalFrameNombreIntegrante = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jMenuBarConsultaMedica = new javax.swing.JMenuBar();
        jMenuProcesos = new javax.swing.JMenu();
        jMenuItemAgregar = new javax.swing.JMenuItem();
        jMenuItemListar = new javax.swing.JMenuItem();
        jMenuItemSalir = new javax.swing.JMenuItem();
        jMenuAyuda = new javax.swing.JMenu();
        jMenuItemAcercaDe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jInternalFrameAgregarPaciente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jInternalFrameAgregarPaciente.setClosable(true);
        jInternalFrameAgregarPaciente.setTitle("Agregar Paciente");
        jInternalFrameAgregarPaciente.setVisible(true);
        jInternalFrameAgregarPaciente.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jInternalFrameAgregarPacienteComponentShown(evt);
            }
        });

        jLabelRutPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelRutPaciente.setText("Rut:");

        jLabelNombrePaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelNombrePaciente.setText("Nombre:");

        jLabelGeneroPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelGeneroPaciente.setText("Género:");

        jLabelDireccionPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDireccionPaciente.setText("Dirección:");

        jLabelEdadPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelEdadPaciente.setText("Edad:");

        jLabelCiudadPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelCiudadPaciente.setText("Ciudad:");

        jLabelIsaprePaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelIsaprePaciente.setText("Isapre:");

        jLabelDonantePaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDonantePaciente.setText("Donante:");

        jTextFieldRutPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldRutPacienteKeyTyped(evt);
            }
        });

        jTextFieldNombrePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombrePacienteActionPerformed(evt);
            }
        });
        jTextFieldNombrePaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNombrePacienteKeyTyped(evt);
            }
        });

        jTextFieldEdadPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldEdadPacienteKeyTyped(evt);
            }
        });

        jTextFieldDireccionPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDireccionPacienteKeyTyped(evt);
            }
        });

        jComboBoxCiudadPaciente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Arica", "Iquique", "Calama", "Antofagasta", "Copiapo   ", "La Serena", "Valparaiso", "Santiago", "Talca", "Concepcion", "Chillan", "Los Angeles", "Temuco", "Valdivia", "Puerto Montt", "Quellon", "Chaiten", "Coihaique", "Cochrane", "Puerto Natales", "Punta Arenas" }));

        buttonGroupIsapre.add(jRadioButtonSi);
        jRadioButtonSi.setText("Si");

        buttonGroupIsapre.add(jRadioButtonNo);
        jRadioButtonNo.setText("No");

        buttonGroupGenero.add(jRadioButtonFemenino);
        jRadioButtonFemenino.setText("Femenino");

        buttonGroupGenero.add(jRadioButtonMasculino);
        jRadioButtonMasculino.setText("Masculino");

        jButtonGuardarPaciente.setText("Guardar");
        jButtonGuardarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarPacienteActionPerformed(evt);
            }
        });

        jButtonLimpiarPaciente.setText("Limpiar");
        jButtonLimpiarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarPacienteActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameAgregarPacienteLayout = new javax.swing.GroupLayout(jInternalFrameAgregarPaciente.getContentPane());
        jInternalFrameAgregarPaciente.getContentPane().setLayout(jInternalFrameAgregarPacienteLayout);
        jInternalFrameAgregarPacienteLayout.setHorizontalGroup(
            jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameAgregarPacienteLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelNombrePaciente)
                    .addComponent(jLabelGeneroPaciente)
                    .addComponent(jLabelEdadPaciente)
                    .addComponent(jLabelIsaprePaciente)
                    .addComponent(jLabelCiudadPaciente)
                    .addComponent(jLabelDireccionPaciente)
                    .addComponent(jLabelRutPaciente)
                    .addComponent(jLabelDonantePaciente))
                .addGap(29, 29, 29)
                .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAgregarPacienteLayout.createSequentialGroup()
                        .addComponent(jComboBoxCiudadPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(240, Short.MAX_VALUE))
                    .addGroup(jInternalFrameAgregarPacienteLayout.createSequentialGroup()
                        .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jCheckBoxDonante, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrameAgregarPacienteLayout.createSequentialGroup()
                                .addComponent(jRadioButtonSi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonNo))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrameAgregarPacienteLayout.createSequentialGroup()
                                .addComponent(jRadioButtonFemenino)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonMasculino))
                            .addComponent(jTextFieldNombrePaciente, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEdadPaciente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldRutPaciente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDireccionPaciente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonGuardarPaciente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonLimpiarPaciente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
        );
        jInternalFrameAgregarPacienteLayout.setVerticalGroup(
            jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameAgregarPacienteLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameAgregarPacienteLayout.createSequentialGroup()
                        .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelRutPaciente)
                            .addComponent(jTextFieldRutPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNombrePaciente)
                            .addComponent(jTextFieldNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelGeneroPaciente)
                            .addComponent(jRadioButtonFemenino)
                            .addComponent(jRadioButtonMasculino)))
                    .addGroup(jInternalFrameAgregarPacienteLayout.createSequentialGroup()
                        .addComponent(jButtonGuardarPaciente)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonLimpiarPaciente)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSalir)))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEdadPaciente)
                    .addComponent(jTextFieldEdadPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDireccionPaciente)
                    .addComponent(jTextFieldDireccionPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCiudadPaciente)
                    .addComponent(jComboBoxCiudadPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIsaprePaciente)
                    .addComponent(jRadioButtonSi)
                    .addComponent(jRadioButtonNo))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameAgregarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBoxDonante)
                    .addComponent(jLabelDonantePaciente))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        getContentPane().add(jInternalFrameAgregarPaciente);
        jInternalFrameAgregarPaciente.setBounds(10, 10, 510, 420);

        jInternalFrameListarPacientes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jInternalFrameListarPacientes.setClosable(true);
        jInternalFrameListarPacientes.setTitle("Listar Pacientes");
        jInternalFrameListarPacientes.setVisible(true);
        jInternalFrameListarPacientes.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jInternalFrameListarPacientesComponentShown(evt);
            }
        });

        jLabelBuscarRutPaciente.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jLabelBuscarRutPaciente.setText("Buscar por Rut Paciente");

        jTextFieldFiltroRut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFiltroRutKeyTyped(evt);
            }
        });

        jButtonBuscarFiltro.setText("Buscar");
        jButtonBuscarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarFiltroActionPerformed(evt);
            }
        });

        jTableListarPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Nombre", "Género", "Edad", "Dirección", "Ciudad", "Isapre", "Donante"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableListarPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListarPacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListarPacientes);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameListarPacientesLayout = new javax.swing.GroupLayout(jInternalFrameListarPacientes.getContentPane());
        jInternalFrameListarPacientes.getContentPane().setLayout(jInternalFrameListarPacientesLayout);
        jInternalFrameListarPacientesLayout.setHorizontalGroup(
            jInternalFrameListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameListarPacientesLayout.createSequentialGroup()
                .addGroup(jInternalFrameListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameListarPacientesLayout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addGroup(jInternalFrameListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrameListarPacientesLayout.createSequentialGroup()
                                .addComponent(jTextFieldFiltroRut, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBuscarFiltro))
                            .addGroup(jInternalFrameListarPacientesLayout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(jLabelBuscarRutPaciente))))
                    .addGroup(jInternalFrameListarPacientesLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jInternalFrameListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jInternalFrameListarPacientesLayout.createSequentialGroup()
                                .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonModificar)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jInternalFrameListarPacientesLayout.setVerticalGroup(
            jInternalFrameListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameListarPacientesLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabelBuscarRutPaciente)
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBuscarFiltro)
                    .addComponent(jTextFieldFiltroRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonModificar))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        getContentPane().add(jInternalFrameListarPacientes);
        jInternalFrameListarPacientes.setBounds(550, 10, 730, 410);

        jInternalFrameModificarPaciente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jInternalFrameModificarPaciente.setTitle("Modificar Paciente");
        jInternalFrameModificarPaciente.setVisible(true);
        jInternalFrameModificarPaciente.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jInternalFrameModificarPacienteComponentShown(evt);
            }
        });

        jLabelRutModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelRutModificar.setText("Rut:");

        jLabelNombreModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelNombreModificar.setText("Nombre:");

        jLabelGeneroModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelGeneroModificar.setText("Género:");

        jLabelEdadModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelEdadModificar.setText("Edad:");

        jLabelDireccionModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDireccionModificar.setText("Dirección:");

        jLabelCiudadModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelCiudadModificar.setText("Ciudad:");

        jLabelIsapreModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelIsapreModificar.setText("Isapre:");

        jLabelDonanteModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDonanteModificar.setText("Donante:");

        jTextFieldRutModificar.setForeground(new java.awt.Color(204, 204, 204));
        jTextFieldRutModificar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldRutModificarKeyTyped(evt);
            }
        });

        jTextFieldNombreModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreModificarActionPerformed(evt);
            }
        });
        jTextFieldNombreModificar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNombreModificarKeyTyped(evt);
            }
        });

        jTextFieldEdadModificar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldEdadModificarKeyTyped(evt);
            }
        });

        jTextFieldDireccionModificar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDireccionModificarKeyTyped(evt);
            }
        });

        buttonGroupSexoModificar.add(jRadioButtonFemeninoModificar);
        jRadioButtonFemeninoModificar.setText("Femenino");

        buttonGroupSexoModificar.add(jRadioButtonMasculinoModificar);
        jRadioButtonMasculinoModificar.setText("Masculino");

        buttonGroupIsapreModificar.add(jRadioButtonSiModificar);
        jRadioButtonSiModificar.setText("Si");

        buttonGroupIsapreModificar.add(jRadioButtonNoModificar);
        jRadioButtonNoModificar.setText("No");

        jComboBoxCiudadModificar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Arica", "Iquique", "Calama", "Antofagasta", "Copiapo   ", "La Serena", "Valparaiso", "Santiago", "Talca", "Concepcion", "Chillan", "Los Angeles", "Temuco", "Valdivia", "Puerto Montt", "Quellon", "Chaiten", "Coihaique", "Cochrane", "Puerto Natales", "Punta Arenas" }));

        jButtonGuardarModificar.setText("Guardar");
        jButtonGuardarModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarModificarActionPerformed(evt);
            }
        });

        jButtonLimbiarModificar.setText("Limpiar");
        jButtonLimbiarModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimbiarModificarActionPerformed(evt);
            }
        });

        jButtonSalirModificar.setText("Salir");
        jButtonSalirModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameModificarPacienteLayout = new javax.swing.GroupLayout(jInternalFrameModificarPaciente.getContentPane());
        jInternalFrameModificarPaciente.getContentPane().setLayout(jInternalFrameModificarPacienteLayout);
        jInternalFrameModificarPacienteLayout.setHorizontalGroup(
            jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameModificarPacienteLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDonanteModificar)
                    .addComponent(jLabelIsapreModificar)
                    .addComponent(jLabelCiudadModificar)
                    .addComponent(jLabelDireccionModificar)
                    .addComponent(jLabelEdadModificar)
                    .addComponent(jLabelGeneroModificar)
                    .addComponent(jLabelNombreModificar)
                    .addComponent(jLabelRutModificar))
                .addGap(31, 31, 31)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrameModificarPacienteLayout.createSequentialGroup()
                            .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jInternalFrameModificarPacienteLayout.createSequentialGroup()
                                    .addComponent(jRadioButtonFemeninoModificar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jRadioButtonMasculinoModificar))
                                .addGroup(jInternalFrameModificarPacienteLayout.createSequentialGroup()
                                    .addComponent(jRadioButtonSiModificar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jRadioButtonNoModificar))
                                .addComponent(jTextFieldEdadModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldRutModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBoxCiudadModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jInternalFrameModificarPacienteLayout.createSequentialGroup()
                            .addComponent(jTextFieldNombreModificar)
                            .addGap(14, 14, 14)))
                    .addComponent(jCheckBoxDonanteModificar)
                    .addComponent(jTextFieldDireccionModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonGuardarModificar)
                    .addComponent(jButtonLimbiarModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSalirModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );
        jInternalFrameModificarPacienteLayout.setVerticalGroup(
            jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameModificarPacienteLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRutModificar)
                    .addComponent(jTextFieldRutModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonGuardarModificar))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreModificar)
                    .addComponent(jTextFieldNombreModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimbiarModificar))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelGeneroModificar)
                    .addComponent(jRadioButtonFemeninoModificar)
                    .addComponent(jRadioButtonMasculinoModificar)
                    .addComponent(jButtonSalirModificar))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEdadModificar)
                    .addComponent(jTextFieldEdadModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDireccionModificar)
                    .addComponent(jTextFieldDireccionModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCiudadModificar)
                    .addComponent(jComboBoxCiudadModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIsapreModificar)
                    .addComponent(jRadioButtonSiModificar)
                    .addComponent(jRadioButtonNoModificar))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrameModificarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDonanteModificar)
                    .addComponent(jCheckBoxDonanteModificar))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        getContentPane().add(jInternalFrameModificarPaciente);
        jInternalFrameModificarPaciente.setBounds(10, 450, 510, 420);

        jInternalFrameNombreIntegrante.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jInternalFrameNombreIntegrante.setClosable(true);
        jInternalFrameNombreIntegrante.setTitle("Nombre Integrante");
        jInternalFrameNombreIntegrante.setVisible(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Manuel Paz de la Vega");

        javax.swing.GroupLayout jInternalFrameNombreIntegranteLayout = new javax.swing.GroupLayout(jInternalFrameNombreIntegrante.getContentPane());
        jInternalFrameNombreIntegrante.getContentPane().setLayout(jInternalFrameNombreIntegranteLayout);
        jInternalFrameNombreIntegranteLayout.setHorizontalGroup(
            jInternalFrameNombreIntegranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameNombreIntegranteLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jInternalFrameNombreIntegranteLayout.setVerticalGroup(
            jInternalFrameNombreIntegranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameNombreIntegranteLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );

        getContentPane().add(jInternalFrameNombreIntegrante);
        jInternalFrameNombreIntegrante.setBounds(650, 520, 370, 170);

        jMenuProcesos.setText("Procesos");

        jMenuItemAgregar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemAgregar.setText("Agregar");
        jMenuItemAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgregarActionPerformed(evt);
            }
        });
        jMenuProcesos.add(jMenuItemAgregar);

        jMenuItemListar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemListar.setText("Listar");
        jMenuItemListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemListarActionPerformed(evt);
            }
        });
        jMenuProcesos.add(jMenuItemListar);

        jMenuItemSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemSalir.setText("Salir");
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenuProcesos.add(jMenuItemSalir);

        jMenuBarConsultaMedica.add(jMenuProcesos);

        jMenuAyuda.setText("Ayuda");

        jMenuItemAcercaDe.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemAcercaDe.setText("Acerca de...");
        jMenuItemAcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAcercaDeActionPerformed(evt);
            }
        });
        jMenuAyuda.add(jMenuItemAcercaDe);

        jMenuBarConsultaMedica.add(jMenuAyuda);

        setJMenuBar(jMenuBarConsultaMedica);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgregarActionPerformed
        if(this.jInternalFrameAgregarPaciente.isVisible())
        {
            this.jInternalFrameAgregarPaciente.moveToFront();
            this.jInternalFrameAgregarPaciente.requestFocus();
        }
        else
        {
            this.jInternalFrameAgregarPaciente.setLocation(100, 100);
            this.jInternalFrameAgregarPaciente.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItemAgregarActionPerformed

    private void jMenuItemListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemListarActionPerformed
        if(this.jInternalFrameListarPacientes.isVisible())
        {
            this.jInternalFrameListarPacientes.moveToFront();
            this.jInternalFrameListarPacientes.requestFocus();
        }
        else
        {
            this.jInternalFrameListarPacientes.setLocation(100, 100);
            this.jInternalFrameListarPacientes.setVisible(true);
            
            
        }
    }//GEN-LAST:event_jMenuItemListarActionPerformed

    private void jTextFieldNombrePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombrePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombrePacienteActionPerformed

    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemSalirActionPerformed

    private void jButtonGuardarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarPacienteActionPerformed
        guardarPaciente();
    }//GEN-LAST:event_jButtonGuardarPacienteActionPerformed

    private void jButtonLimpiarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarPacienteActionPerformed
        limpiarGuardarPaciente();
    }//GEN-LAST:event_jButtonLimpiarPacienteActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        this.jInternalFrameAgregarPaciente.setVisible(false);
        
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jInternalFrameAgregarPacienteComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jInternalFrameAgregarPacienteComponentShown
        limpiarGuardarPaciente();
    }//GEN-LAST:event_jInternalFrameAgregarPacienteComponentShown

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        int filaSeleccionada = this.jTableListarPacientes.getSelectedRow();
        if(filaSeleccionada > -1)
            {
            if(this.jInternalFrameModificarPaciente.isVisible())
            {
                this.jInternalFrameModificarPaciente.moveToFront();
                this.jInternalFrameModificarPaciente.requestFocus();
            }
            else
            {
                this.jInternalFrameModificarPaciente.setLocation(650, 100);
                this.jInternalFrameModificarPaciente.setVisible(true);               
            }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Selecciona fila.","Mensajes",JOptionPane.WARNING_MESSAGE);
            }	
        
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        eliminarPaciente();
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jInternalFrameListarPacientesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jInternalFrameListarPacientesComponentShown
        cargarListaPacientes();
    }//GEN-LAST:event_jInternalFrameListarPacientesComponentShown

    private void jButtonBuscarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarFiltroActionPerformed
        buscarRut();
    }//GEN-LAST:event_jButtonBuscarFiltroActionPerformed

    private void jTextFieldNombreModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreModificarActionPerformed

    private void jButtonGuardarModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarModificarActionPerformed
        modificarPaciente();
    }//GEN-LAST:event_jButtonGuardarModificarActionPerformed

    private void jButtonSalirModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirModificarActionPerformed
        this.jInternalFrameModificarPaciente.setVisible(false);
    }//GEN-LAST:event_jButtonSalirModificarActionPerformed

    private void jButtonLimbiarModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimbiarModificarActionPerformed
        limpiarModificarPaciente();
    }//GEN-LAST:event_jButtonLimbiarModificarActionPerformed

    private void jInternalFrameModificarPacienteComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jInternalFrameModificarPacienteComponentShown
        limpiarModificarPaciente();
        
    }//GEN-LAST:event_jInternalFrameModificarPacienteComponentShown

    private void jTableListarPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListarPacientesMouseClicked
        int seleccion = this.jTableListarPacientes.rowAtPoint(evt.getPoint());
        int fila = this.jTableListarPacientes.getSelectedRow();
        String genero = (String) this.jTableListarPacientes.getValueAt(fila, 2);
        String isapre = (String) this.jTableListarPacientes.getValueAt(fila, 6);
        boolean donante = (boolean) this.jTableListarPacientes.getValueAt(fila, 7);
        
        this.jTextFieldRutModificar.setText(String.valueOf(this.jTableListarPacientes.getValueAt(seleccion, 0)));
        this.jTextFieldNombreModificar.setText(String.valueOf(this.jTableListarPacientes.getValueAt(seleccion, 1)));
        if(genero.equals("F"))
        {
            this.jRadioButtonFemeninoModificar.setSelected(true);
        }
        else
        {
            this.jRadioButtonMasculinoModificar.setSelected(true);
        }
        this.jTextFieldEdadModificar.setText(String.valueOf(this.jTableListarPacientes.getValueAt(seleccion, 3)));
        this.jTextFieldDireccionModificar.setText(String.valueOf(this.jTableListarPacientes.getValueAt(seleccion, 4)));
        this.jComboBoxCiudadModificar.setSelectedItem(String.valueOf(this.jTableListarPacientes.getValueAt(seleccion, 5)));
        if(isapre.equals("N"))
        {
            this.jRadioButtonNoModificar.setSelected(true);
        }
        else
        {
            this.jRadioButtonSiModificar.setSelected(true);
        }
        //this.jCheckBoxDonanteModificar.setSelected((boolean) this.jTableListarPacientes.getValueAt(seleccion, 7));
        if(donante == true)
        {
            this.jCheckBoxDonanteModificar.setSelected(true);
        }
        else
        {
            this.jCheckBoxDonanteModificar.setSelected(false);
        }
        
    }//GEN-LAST:event_jTableListarPacientesMouseClicked

    private void jMenuItemAcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAcercaDeActionPerformed
        if(this.jInternalFrameNombreIntegrante.isVisible())
        {
            this.jInternalFrameNombreIntegrante.moveToFront();
            this.jInternalFrameNombreIntegrante.requestFocus();
        }
        else
        {
            this.jInternalFrameNombreIntegrante.setLocation(100, 100);
            this.jInternalFrameNombreIntegrante.setVisible(true);
            
            
        }
    }//GEN-LAST:event_jMenuItemAcercaDeActionPerformed

    private void jTextFieldRutPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRutPacienteKeyTyped
        if(this.jTextFieldRutPaciente.getText().length() == 12)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldRutPacienteKeyTyped

    private void jTextFieldNombrePacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombrePacienteKeyTyped
        if(this.jTextFieldNombrePaciente.getText().length() == 60)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNombrePacienteKeyTyped

    private void jTextFieldEdadPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEdadPacienteKeyTyped
        if(this.jTextFieldEdadPaciente.getText().length() == 3)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldEdadPacienteKeyTyped

    private void jTextFieldDireccionPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDireccionPacienteKeyTyped
        if(this.jTextFieldDireccionPaciente.getText().length() == 60)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldDireccionPacienteKeyTyped

    private void jTextFieldRutModificarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRutModificarKeyTyped
        if(this.jTextFieldRutModificar.getText().length() == 12)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldRutModificarKeyTyped

    private void jTextFieldNombreModificarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreModificarKeyTyped
        if(this.jTextFieldNombreModificar.getText().length() == 60)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNombreModificarKeyTyped

    private void jTextFieldEdadModificarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEdadModificarKeyTyped
        if(this.jTextFieldEdadModificar.getText().length() == 3)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldEdadModificarKeyTyped

    private void jTextFieldDireccionModificarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDireccionModificarKeyTyped
        if(this.jTextFieldDireccionModificar.getText().length() == 60)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldDireccionModificarKeyTyped

    private void jTextFieldFiltroRutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFiltroRutKeyTyped
        if(this.jTextFieldFiltroRut.getText().length() == 12)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldFiltroRutKeyTyped

    
    
    public void guardarPaciente(){
        
        if(this.jTextFieldRutPaciente.getText().equals("") || this.jTextFieldNombrePaciente.getText().equals("")
                || this.jTextFieldEdadPaciente.getText().equals("") || this.jTextFieldDireccionPaciente.getText().equals("") 
                || this.jComboBoxCiudadPaciente.getSelectedItem().equals("Seleccionar"))
        {
            JOptionPane.showMessageDialog(this, "Debe rellenar todos los campos", 
                        "Mensajes", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        try 
        {
            String rut = this.jTextFieldRutPaciente.getText();
            String nombre = this.jTextFieldNombrePaciente.getText();
            String genero;
            if(this.jRadioButtonFemenino.isSelected())
            {
                genero = "F";
            }
            else
            {
                genero = "M";
            }
            int edad = Integer.parseInt(this.jTextFieldEdadPaciente.getText());
            String direccion = this.jTextFieldDireccionPaciente.getText();
            String ciudad = this.jComboBoxCiudadPaciente.getSelectedItem().toString();
            String isapre;
            if(this.jRadioButtonNo.isSelected())
            {
                isapre = "N";
            }
            else
            {
                isapre = "S";
            }
            int donante;
            if(this.jCheckBoxDonante.isSelected())
            {
                donante = 1;
            }
            else
            {
                donante = 0;
            }
            Paciente p = new Paciente(rut, nombre, genero, edad, direccion, ciudad, isapre, donante);
            
            if(re.create(p))
            {
                JOptionPane.showMessageDialog(this, "Paciente registrado correctamente", 
                        "Mensajes", JOptionPane.INFORMATION_MESSAGE);
                limpiarGuardarPaciente();
                if(this.jInternalFrameListarPacientes.isVisible())
                {
                    cargarListaPacientes();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "No se logro registrar paciente", 
                        "Mensajes", JOptionPane.ERROR_MESSAGE);
            }
            
        } 
        catch (HeadlessException e) 
        {
            JOptionPane.showMessageDialog(this, "Error", 
                        "Mensajes", JOptionPane.ERROR_MESSAGE);
        }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Edad invalida", 
                        "Mensajes", JOptionPane.ERROR_MESSAGE);
        }
        }
        
    }
    
    public void limpiarGuardarPaciente(){
        this.jTextFieldRutPaciente.setText(null);
        this.jTextFieldNombrePaciente.setText(null);
        this.jRadioButtonFemenino.setSelected(true);
        this.jTextFieldEdadPaciente.setText(null);
        this.jTextFieldDireccionPaciente.setText(null);
        this.jComboBoxCiudadPaciente.setSelectedIndex(0);
        this.jRadioButtonSi.setSelected(true);
        this.jCheckBoxDonante.setSelected(false);
    }
    

    public void limpiarModificarPaciente(){
        this.jTextFieldRutModificar.setEditable(false);
        this.jTextFieldNombreModificar.setText(null);
        this.jRadioButtonFemeninoModificar.setSelected(true);
        this.jTextFieldEdadModificar.setText(null);
        this.jTextFieldDireccionModificar.setText(null);
        this.jComboBoxCiudadModificar.setSelectedIndex(0);
        this.jRadioButtonSiModificar.setSelected(true);
        this.jCheckBoxDonanteModificar.setSelected(false);
    }
    
    public void cargarListaPacientes(){
        try
        {
            DefaultTableModel modelo = (DefaultTableModel) this.jTableListarPacientes.getModel();
            modelo.setRowCount(0);
            ArrayList<Paciente> pacientes = re.readAll();
            for(Paciente p : pacientes)
            {
                Object fila[] = new Object[8];
                fila[0] = p.getRut();
                fila[1] = p.getNombre();
                fila[2] = p.getGenero();
                fila[3] = p.getEdad();
                fila[4] = p.getDireccion();
                fila[5] = p.getCiudad();
                fila[6] = p.getIsapre();
                if(p.getDonante() == 1)
                {
                    fila[7] = true;
                }
                else
                {
                    fila[7] = false;
                }
                modelo.addRow(fila);
            }
            this.jTableListarPacientes.setModel(modelo);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Problemas de conexión con la Base de Datos", 
                        "Mensajes", JOptionPane.ERROR_MESSAGE);     
        }
    }
    
    public void eliminarPaciente(){
        try 
        {
            int filaSeleccionada = this.jTableListarPacientes.getSelectedRow();
            //JOptionPane.showMessageDialog(this, filaSeleccionada);
            if(filaSeleccionada > -1)
            {
                int respuesta = JOptionPane.showConfirmDialog(this, "Está seguro que deseas eliminar a este paciente.", 
                    "Mensajes", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                if(respuesta == JOptionPane.YES_OPTION)
                {
                    String rut = this.jTableListarPacientes.getModel().getValueAt(filaSeleccionada, 0).toString();
                    if(re.delete(rut))
                    {
                        JOptionPane.showMessageDialog(this, "Paciente eliminado.","Mensajes",JOptionPane.INFORMATION_MESSAGE);
                        cargarListaPacientes();
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Selecciona fila","Mensajes",JOptionPane.WARNING_MESSAGE);
            }
        } 
        catch (HeadlessException e) 
        {
            JOptionPane.showMessageDialog(this, "Se ha producido un error.",
                    "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }
    
    public void buscarRut(){
        
        try
        {
        DefaultTableModel modelo = (DefaultTableModel) this.jTableListarPacientes.getModel();
        modelo.setRowCount(0);
        ArrayList<Paciente> pacientes = re.readAll();
        String filtro = this.jTextFieldFiltroRut.getText();
        for(Paciente p : pacientes)
        {
            Object fila[] = new Object[8];
            fila[0] = p.getRut();
            fila[1] = p.getNombre();
            fila[2] = p.getGenero();
            fila[3] = p.getEdad();
            fila[4] = p.getDireccion();
            fila[5] = p.getCiudad();
            fila[6] = p.getIsapre();
            if(p.getDonante() == 1)
            {
                fila[7] = true;
            }
            else
            {
                fila[7] = false;
            }
                
            if(p.getRut().toLowerCase().contains(filtro.toLowerCase()))
            {
                modelo.addRow(fila);
            }
        }
        this.jTableListarPacientes.setModel(modelo);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Problemas de conexión con la Base de Datos", 
                        "Mensajes", JOptionPane.ERROR_MESSAGE);     
        }
    }
           
    public void cargarDatos(){
        
        int fila = this.jTableListarPacientes.getSelectedRow();
        String rut = (String) this.jTableListarPacientes.getValueAt(fila, 0);
        String nombre = (String) this.jTableListarPacientes.getValueAt(fila, 1);
        String genero = (String) this.jTableListarPacientes.getValueAt(fila, 2);
        String edad = (String) this.jTableListarPacientes.getValueAt(fila, 3);
        this.jTextFieldRutModificar.setText(rut);
        this.jTextFieldNombreModificar.setText(nombre);
        if(genero.equals("F"))
        {
            this.jRadioButtonFemeninoModificar.setSelected(true);
        }
        else
        {
            this.jRadioButtonMasculinoModificar.setSelected(true);
        }
        this.jTextFieldEdadModificar.setText(edad);

    }
    
    public void modificarPaciente(){
        if(this.jTextFieldNombreModificar.getText().equals("")
                || this.jTextFieldEdadModificar.getText().equals("") || this.jTextFieldDireccionModificar.getText().equals("") 
                || this.jComboBoxCiudadModificar.getSelectedItem().equals("Seleccionar"))
        {
            JOptionPane.showMessageDialog(this, "Debe rellenar todos los campos para modificar al paciente", 
                        "Mensajes", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        try 
        {
            String rut = this.jTextFieldRutModificar.getText();
            String nombre = this.jTextFieldNombreModificar.getText();
            String genero;
            if(this.jRadioButtonFemeninoModificar.isSelected())
            {
                genero = "F";
            }
            else
            {
                genero = "M";
            }
            int edad = Integer.parseInt(this.jTextFieldEdadModificar.getText());
            String direccion = this.jTextFieldDireccionModificar.getText();
            String ciudad = this.jComboBoxCiudadModificar.getSelectedItem().toString();
            String isapre;
            if(this.jRadioButtonNoModificar.isSelected())
            {
                isapre = "N";
            }
            else
            {
                isapre = "S";
            }
            int donante;
            if(this.jCheckBoxDonanteModificar.isSelected())
            {
                donante = 1;
            }
            else
            {
                donante = 0;
            }
            Paciente p = new Paciente(rut, nombre, genero, edad, direccion, ciudad, isapre, donante);
            
            if(re.update(p))
            {
                JOptionPane.showMessageDialog(this, "Paciente modificado correctamente", 
                        "Mensajes", JOptionPane.INFORMATION_MESSAGE);
                limpiarModificarPaciente();
                this.jInternalFrameModificarPaciente.setVisible(false);
                if(this.jInternalFrameListarPacientes.isVisible())
                {
                    cargarListaPacientes();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "No se logro modificar paciente", 
                        "Mensajes", JOptionPane.ERROR_MESSAGE);
            }
            
        } 
        catch (HeadlessException | NumberFormatException e) 
        {
            JOptionPane.showMessageDialog(this, "Error", 
                    "Mensajes", JOptionPane.ERROR_MESSAGE);
        }
        }
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Menu m = new Menu();
                m.setTitle("Consulta Medica");
                m.setResizable(true);
                m.setExtendedState(JFrame.MAXIMIZED_BOTH);
                m.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.ButtonGroup buttonGroupGenero;
    public static javax.swing.ButtonGroup buttonGroupIsapre;
    public static javax.swing.ButtonGroup buttonGroupIsapreModificar;
    public static javax.swing.ButtonGroup buttonGroupSexoModificar;
    private javax.swing.JButton jButtonBuscarFiltro;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardarModificar;
    private javax.swing.JButton jButtonGuardarPaciente;
    private javax.swing.JButton jButtonLimbiarModificar;
    private javax.swing.JButton jButtonLimpiarPaciente;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonSalirModificar;
    private javax.swing.JCheckBox jCheckBoxDonante;
    private javax.swing.JCheckBox jCheckBoxDonanteModificar;
    private javax.swing.JComboBox<String> jComboBoxCiudadModificar;
    private javax.swing.JComboBox<String> jComboBoxCiudadPaciente;
    private javax.swing.JInternalFrame jInternalFrameAgregarPaciente;
    private javax.swing.JInternalFrame jInternalFrameListarPacientes;
    private javax.swing.JInternalFrame jInternalFrameModificarPaciente;
    private javax.swing.JInternalFrame jInternalFrameNombreIntegrante;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelBuscarRutPaciente;
    private javax.swing.JLabel jLabelCiudadModificar;
    private javax.swing.JLabel jLabelCiudadPaciente;
    private javax.swing.JLabel jLabelDireccionModificar;
    private javax.swing.JLabel jLabelDireccionPaciente;
    private javax.swing.JLabel jLabelDonanteModificar;
    private javax.swing.JLabel jLabelDonantePaciente;
    private javax.swing.JLabel jLabelEdadModificar;
    private javax.swing.JLabel jLabelEdadPaciente;
    private javax.swing.JLabel jLabelGeneroModificar;
    private javax.swing.JLabel jLabelGeneroPaciente;
    private javax.swing.JLabel jLabelIsapreModificar;
    private javax.swing.JLabel jLabelIsaprePaciente;
    private javax.swing.JLabel jLabelNombreModificar;
    private javax.swing.JLabel jLabelNombrePaciente;
    private javax.swing.JLabel jLabelRutModificar;
    private javax.swing.JLabel jLabelRutPaciente;
    private javax.swing.JMenu jMenuAyuda;
    private javax.swing.JMenuBar jMenuBarConsultaMedica;
    private javax.swing.JMenuItem jMenuItemAcercaDe;
    private javax.swing.JMenuItem jMenuItemAgregar;
    private javax.swing.JMenuItem jMenuItemListar;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenu jMenuProcesos;
    private javax.swing.JRadioButton jRadioButtonFemenino;
    private javax.swing.JRadioButton jRadioButtonFemeninoModificar;
    private javax.swing.JRadioButton jRadioButtonMasculino;
    private javax.swing.JRadioButton jRadioButtonMasculinoModificar;
    private javax.swing.JRadioButton jRadioButtonNo;
    private javax.swing.JRadioButton jRadioButtonNoModificar;
    private javax.swing.JRadioButton jRadioButtonSi;
    private javax.swing.JRadioButton jRadioButtonSiModificar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListarPacientes;
    private javax.swing.JTextField jTextFieldDireccionModificar;
    private javax.swing.JTextField jTextFieldDireccionPaciente;
    private javax.swing.JTextField jTextFieldEdadModificar;
    private javax.swing.JTextField jTextFieldEdadPaciente;
    private javax.swing.JTextField jTextFieldFiltroRut;
    private javax.swing.JTextField jTextFieldNombreModificar;
    private javax.swing.JTextField jTextFieldNombrePaciente;
    private javax.swing.JTextField jTextFieldRutModificar;
    private javax.swing.JTextField jTextFieldRutPaciente;
    // End of variables declaration//GEN-END:variables
}
